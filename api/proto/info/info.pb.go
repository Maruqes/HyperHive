// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: info.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

type Ok struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp string `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *Ok) Reset() {
	*x = Ok{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ok) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ok) ProtoMessage() {}

func (x *Ok) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ok.ProtoReflect.Descriptor instead.
func (*Ok) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *Ok) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

type Core struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usage float64 `protobuf:"fixed64,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Temp  float64 `protobuf:"fixed64,2,opt,name=temp,proto3" json:"temp,omitempty"`
}

func (x *Core) Reset() {
	*x = Core{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Core) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Core) ProtoMessage() {}

func (x *Core) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Core.ProtoReflect.Descriptor instead.
func (*Core) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

func (x *Core) GetUsage() float64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *Core) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

type CPUCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cores []*Core `protobuf:"bytes,1,rep,name=cores,proto3" json:"cores,omitempty"`
}

func (x *CPUCoreInfo) Reset() {
	*x = CPUCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUCoreInfo) ProtoMessage() {}

func (x *CPUCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUCoreInfo.ProtoReflect.Descriptor instead.
func (*CPUCoreInfo) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{3}
}

func (x *CPUCoreInfo) GetCores() []*Core {
	if x != nil {
		return x.Cores
	}
	return nil
}

type MemSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedPercent float64 `protobuf:"fixed64,1,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	FreePercent float64 `protobuf:"fixed64,2,opt,name=free_percent,json=freePercent,proto3" json:"free_percent,omitempty"`
	TotalMb     int32   `protobuf:"varint,3,opt,name=total_mb,json=totalMb,proto3" json:"total_mb,omitempty"`
	UsedMb      int32   `protobuf:"varint,4,opt,name=used_mb,json=usedMb,proto3" json:"used_mb,omitempty"`
	FreeMb      int32   `protobuf:"varint,5,opt,name=free_mb,json=freeMb,proto3" json:"free_mb,omitempty"`
}

func (x *MemSummary) Reset() {
	*x = MemSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemSummary) ProtoMessage() {}

func (x *MemSummary) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemSummary.ProtoReflect.Descriptor instead.
func (*MemSummary) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{4}
}

func (x *MemSummary) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *MemSummary) GetFreePercent() float64 {
	if x != nil {
		return x.FreePercent
	}
	return 0
}

func (x *MemSummary) GetTotalMb() int32 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *MemSummary) GetUsedMb() int32 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *MemSummary) GetFreeMb() int32 {
	if x != nil {
		return x.FreeMb
	}
	return 0
}

type DiskStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      string   `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint  string   `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	Fstype      string   `protobuf:"bytes,3,opt,name=fstype,proto3" json:"fstype,omitempty"`
	Total       uint64   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Free        uint64   `protobuf:"varint,5,opt,name=free,proto3" json:"free,omitempty"`
	Used        uint64   `protobuf:"varint,6,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent float64  `protobuf:"fixed64,7,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	Opts        []string `protobuf:"bytes,8,rep,name=opts,proto3" json:"opts,omitempty"`
}

func (x *DiskStruct) Reset() {
	*x = DiskStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStruct) ProtoMessage() {}

func (x *DiskStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStruct.ProtoReflect.Descriptor instead.
func (*DiskStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{5}
}

func (x *DiskStruct) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskStruct) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskStruct) GetFstype() string {
	if x != nil {
		return x.Fstype
	}
	return ""
}

func (x *DiskStruct) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskStruct) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *DiskStruct) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DiskStruct) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *DiskStruct) GetOpts() []string {
	if x != nil {
		return x.Opts
	}
	return nil
}

type DiskIOStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device           string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	ReadCount        uint64 `protobuf:"varint,2,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
	WriteCount       uint64 `protobuf:"varint,3,opt,name=write_count,json=writeCount,proto3" json:"write_count,omitempty"`
	ReadBytes        uint64 `protobuf:"varint,4,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
	WriteBytes       uint64 `protobuf:"varint,5,opt,name=write_bytes,json=writeBytes,proto3" json:"write_bytes,omitempty"`
	ReadTime         uint64 `protobuf:"varint,6,opt,name=read_time,json=readTime,proto3" json:"read_time,omitempty"`
	WriteTime        uint64 `protobuf:"varint,7,opt,name=write_time,json=writeTime,proto3" json:"write_time,omitempty"`
	IopsInProgress   uint64 `protobuf:"varint,8,opt,name=iops_in_progress,json=iopsInProgress,proto3" json:"iops_in_progress,omitempty"`
	IoTime           uint64 `protobuf:"varint,9,opt,name=io_time,json=ioTime,proto3" json:"io_time,omitempty"`
	WeightedIo       uint64 `protobuf:"varint,10,opt,name=weighted_io,json=weightedIo,proto3" json:"weighted_io,omitempty"`
	MergedReadCount  uint64 `protobuf:"varint,11,opt,name=merged_read_count,json=mergedReadCount,proto3" json:"merged_read_count,omitempty"`
	MergedWriteCount uint64 `protobuf:"varint,12,opt,name=merged_write_count,json=mergedWriteCount,proto3" json:"merged_write_count,omitempty"`
}

func (x *DiskIOStruct) Reset() {
	*x = DiskIOStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskIOStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskIOStruct) ProtoMessage() {}

func (x *DiskIOStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskIOStruct.ProtoReflect.Descriptor instead.
func (*DiskIOStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{6}
}

func (x *DiskIOStruct) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskIOStruct) GetReadCount() uint64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *DiskIOStruct) GetWriteCount() uint64 {
	if x != nil {
		return x.WriteCount
	}
	return 0
}

func (x *DiskIOStruct) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *DiskIOStruct) GetWriteBytes() uint64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *DiskIOStruct) GetReadTime() uint64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *DiskIOStruct) GetWriteTime() uint64 {
	if x != nil {
		return x.WriteTime
	}
	return 0
}

func (x *DiskIOStruct) GetIopsInProgress() uint64 {
	if x != nil {
		return x.IopsInProgress
	}
	return 0
}

func (x *DiskIOStruct) GetIoTime() uint64 {
	if x != nil {
		return x.IoTime
	}
	return 0
}

func (x *DiskIOStruct) GetWeightedIo() uint64 {
	if x != nil {
		return x.WeightedIo
	}
	return 0
}

func (x *DiskIOStruct) GetMergedReadCount() uint64 {
	if x != nil {
		return x.MergedReadCount
	}
	return 0
}

func (x *DiskIOStruct) GetMergedWriteCount() uint64 {
	if x != nil {
		return x.MergedWriteCount
	}
	return 0
}

type DiskSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disks []*DiskStruct      `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	Usage map[string]float64 `protobuf:"bytes,2,rep,name=usage,proto3" json:"usage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Io    []*DiskIOStruct    `protobuf:"bytes,3,rep,name=io,proto3" json:"io,omitempty"`
}

func (x *DiskSummary) Reset() {
	*x = DiskSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSummary) ProtoMessage() {}

func (x *DiskSummary) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSummary.ProtoReflect.Descriptor instead.
func (*DiskSummary) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{7}
}

func (x *DiskSummary) GetDisks() []*DiskStruct {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *DiskSummary) GetUsage() map[string]float64 {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *DiskSummary) GetIo() []*DiskIOStruct {
	if x != nil {
		return x.Io
	}
	return nil
}

type NetworkInterfaceStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mtu          int32    `protobuf:"varint,2,opt,name=mtu,proto3" json:"mtu,omitempty"`
	HardwareAddr string   `protobuf:"bytes,3,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	Flags        []string `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty"`
	Addrs        []string `protobuf:"bytes,5,rep,name=addrs,proto3" json:"addrs,omitempty"`
}

func (x *NetworkInterfaceStruct) Reset() {
	*x = NetworkInterfaceStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceStruct) ProtoMessage() {}

func (x *NetworkInterfaceStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceStruct.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkInterfaceStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceStruct) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *NetworkInterfaceStruct) GetHardwareAddr() string {
	if x != nil {
		return x.HardwareAddr
	}
	return ""
}

func (x *NetworkInterfaceStruct) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *NetworkInterfaceStruct) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type NetworkStatsStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BytesSent   uint64 `protobuf:"varint,2,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesRecv   uint64 `protobuf:"varint,3,opt,name=bytes_recv,json=bytesRecv,proto3" json:"bytes_recv,omitempty"`
	PacketsSent uint64 `protobuf:"varint,4,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsRecv uint64 `protobuf:"varint,5,opt,name=packets_recv,json=packetsRecv,proto3" json:"packets_recv,omitempty"`
}

func (x *NetworkStatsStruct) Reset() {
	*x = NetworkStatsStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStatsStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStatsStruct) ProtoMessage() {}

func (x *NetworkStatsStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStatsStruct.ProtoReflect.Descriptor instead.
func (*NetworkStatsStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkStatsStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkStatsStruct) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkStatsStruct) GetBytesRecv() uint64 {
	if x != nil {
		return x.BytesRecv
	}
	return 0
}

func (x *NetworkStatsStruct) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkStatsStruct) GetPacketsRecv() uint64 {
	if x != nil {
		return x.PacketsRecv
	}
	return 0
}

type NetworkConnectionStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fd     uint32 `protobuf:"varint,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Family uint32 `protobuf:"varint,2,opt,name=family,proto3" json:"family,omitempty"`
	Type   uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Laddr  string `protobuf:"bytes,4,opt,name=laddr,proto3" json:"laddr,omitempty"`
	Raddr  string `protobuf:"bytes,5,opt,name=raddr,proto3" json:"raddr,omitempty"`
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Pid    int32  `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *NetworkConnectionStruct) Reset() {
	*x = NetworkConnectionStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConnectionStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectionStruct) ProtoMessage() {}

func (x *NetworkConnectionStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectionStruct.ProtoReflect.Descriptor instead.
func (*NetworkConnectionStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkConnectionStruct) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *NetworkConnectionStruct) GetFamily() uint32 {
	if x != nil {
		return x.Family
	}
	return 0
}

func (x *NetworkConnectionStruct) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NetworkConnectionStruct) GetLaddr() string {
	if x != nil {
		return x.Laddr
	}
	return ""
}

func (x *NetworkConnectionStruct) GetRaddr() string {
	if x != nil {
		return x.Raddr
	}
	return ""
}

func (x *NetworkConnectionStruct) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkConnectionStruct) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type NetworkSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interfaces []*NetworkInterfaceStruct `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Stats      []*NetworkStatsStruct     `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
	Usage      map[string]uint64         `protobuf:"bytes,3,rep,name=usage,proto3" json:"usage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *NetworkSummary) Reset() {
	*x = NetworkSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSummary) ProtoMessage() {}

func (x *NetworkSummary) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSummary.ProtoReflect.Descriptor instead.
func (*NetworkSummary) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkSummary) GetInterfaces() []*NetworkInterfaceStruct {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *NetworkSummary) GetStats() []*NetworkStatsStruct {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *NetworkSummary) GetUsage() map[string]uint64 {
	if x != nil {
		return x.Usage
	}
	return nil
}

type StressCPUParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumVCPU    int32 `protobuf:"varint,1,opt,name=numVCPU,proto3" json:"numVCPU,omitempty"`
	NumSeconds int32 `protobuf:"varint,2,opt,name=numSeconds,proto3" json:"numSeconds,omitempty"`
}

func (x *StressCPUParams) Reset() {
	*x = StressCPUParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StressCPUParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StressCPUParams) ProtoMessage() {}

func (x *StressCPUParams) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StressCPUParams.ProtoReflect.Descriptor instead.
func (*StressCPUParams) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{12}
}

func (x *StressCPUParams) GetNumVCPU() int32 {
	if x != nil {
		return x.NumVCPU
	}
	return 0
}

func (x *StressCPUParams) GetNumSeconds() int32 {
	if x != nil {
		return x.NumSeconds
	}
	return 0
}

type TestRamMEMParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumGigs     int32 `protobuf:"varint,1,opt,name=numGigs,proto3" json:"numGigs,omitempty"`
	NumOfPasses int32 `protobuf:"varint,2,opt,name=numOfPasses,proto3" json:"numOfPasses,omitempty"`
}

func (x *TestRamMEMParams) Reset() {
	*x = TestRamMEMParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRamMEMParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRamMEMParams) ProtoMessage() {}

func (x *TestRamMEMParams) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRamMEMParams.ProtoReflect.Descriptor instead.
func (*TestRamMEMParams) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{13}
}

func (x *TestRamMEMParams) GetNumGigs() int32 {
	if x != nil {
		return x.NumGigs
	}
	return 0
}

func (x *TestRamMEMParams) GetNumOfPasses() int32 {
	if x != nil {
		return x.NumOfPasses
	}
	return 0
}

var File_info_proto protoreflect.FileDescriptor

var file_info_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18, 0x0a, 0x02, 0x4f,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x22, 0x2f, 0x0a, 0x0b, 0x43, 0x50, 0x55, 0x43, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x72,
	0x65, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6d,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x64, 0x4d,
	0x62, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x62, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x62, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x44,
	0x69, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x66, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x70, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22,
	0xa0, 0x03, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x4f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6f, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x69, 0x6f, 0x70, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x69, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x49, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x02, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x4f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x02,
	0x69, 0x6f, 0x1a, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a,
	0x16, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x74, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x23, 0x0a,
	0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x22, 0xac,
	0x01, 0x0a, 0x12, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x76, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x76, 0x22, 0xab, 0x01,
	0x0a, 0x17, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x66, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x0e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3c,
	0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x05,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a,
	0x0f, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x43, 0x50, 0x55, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x56, 0x43, 0x50, 0x55, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x56, 0x43, 0x50, 0x55, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75,
	0x6d, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6e, 0x75, 0x6d, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x6d, 0x4d, 0x45, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x47, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6e, 0x75, 0x6d, 0x47, 0x69, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x4f,
	0x66, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x75, 0x6d, 0x4f, 0x66, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x32, 0xaf, 0x02, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x50, 0x55, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11,
	0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x50, 0x55, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x0b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x10, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x0b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x11, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x53,
	0x74, 0x72, 0x65, 0x73, 0x73, 0x43, 0x50, 0x55, 0x12, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x43, 0x50, 0x55, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x0b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x0a,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6d, 0x4d, 0x45, 0x4d, 0x12, 0x16, 0x2e, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6d, 0x4d, 0x45, 0x4d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x08, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x6b, 0x42, 0x32, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61, 0x72, 0x75, 0x71,
	0x65, 0x73, 0x2f, 0x35, 0x31, 0x32, 0x53, 0x76, 0x4d, 0x61, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData = file_info_proto_rawDesc
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_info_proto_rawDescData)
	})
	return file_info_proto_rawDescData
}

var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_info_proto_goTypes = []interface{}{
	(*Empty)(nil),                   // 0: info.Empty
	(*Ok)(nil),                      // 1: info.Ok
	(*Core)(nil),                    // 2: info.Core
	(*CPUCoreInfo)(nil),             // 3: info.CPUCoreInfo
	(*MemSummary)(nil),              // 4: info.MemSummary
	(*DiskStruct)(nil),              // 5: info.DiskStruct
	(*DiskIOStruct)(nil),            // 6: info.DiskIOStruct
	(*DiskSummary)(nil),             // 7: info.DiskSummary
	(*NetworkInterfaceStruct)(nil),  // 8: info.NetworkInterfaceStruct
	(*NetworkStatsStruct)(nil),      // 9: info.NetworkStatsStruct
	(*NetworkConnectionStruct)(nil), // 10: info.NetworkConnectionStruct
	(*NetworkSummary)(nil),          // 11: info.NetworkSummary
	(*StressCPUParams)(nil),         // 12: info.StressCPUParams
	(*TestRamMEMParams)(nil),        // 13: info.TestRamMEMParams
	nil,                             // 14: info.DiskSummary.UsageEntry
	nil,                             // 15: info.NetworkSummary.UsageEntry
}
var file_info_proto_depIdxs = []int32{
	2,  // 0: info.CPUCoreInfo.cores:type_name -> info.Core
	5,  // 1: info.DiskSummary.disks:type_name -> info.DiskStruct
	14, // 2: info.DiskSummary.usage:type_name -> info.DiskSummary.UsageEntry
	6,  // 3: info.DiskSummary.io:type_name -> info.DiskIOStruct
	8,  // 4: info.NetworkSummary.interfaces:type_name -> info.NetworkInterfaceStruct
	9,  // 5: info.NetworkSummary.stats:type_name -> info.NetworkStatsStruct
	15, // 6: info.NetworkSummary.usage:type_name -> info.NetworkSummary.UsageEntry
	0,  // 7: info.Info.GetCPUInfo:input_type -> info.Empty
	0,  // 8: info.Info.GetMemSummary:input_type -> info.Empty
	0,  // 9: info.Info.GetDiskSummary:input_type -> info.Empty
	0,  // 10: info.Info.GetNetworkSummary:input_type -> info.Empty
	12, // 11: info.Info.StressCPU:input_type -> info.StressCPUParams
	13, // 12: info.Info.TestRamMEM:input_type -> info.TestRamMEMParams
	3,  // 13: info.Info.GetCPUInfo:output_type -> info.CPUCoreInfo
	4,  // 14: info.Info.GetMemSummary:output_type -> info.MemSummary
	7,  // 15: info.Info.GetDiskSummary:output_type -> info.DiskSummary
	11, // 16: info.Info.GetNetworkSummary:output_type -> info.NetworkSummary
	0,  // 17: info.Info.StressCPU:output_type -> info.Empty
	1,  // 18: info.Info.TestRamMEM:output_type -> info.Ok
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ok); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Core); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskIOStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStatsStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkConnectionStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StressCPUParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRamMEMParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_rawDesc = nil
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}
