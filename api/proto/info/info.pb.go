// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.19.6
// source: info.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

type Ok struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resp          string                 `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ok) Reset() {
	*x = Ok{}
	mi := &file_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ok) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ok) ProtoMessage() {}

func (x *Ok) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ok.ProtoReflect.Descriptor instead.
func (*Ok) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *Ok) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

type Core struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usage         float64                `protobuf:"fixed64,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Temp          float64                `protobuf:"fixed64,2,opt,name=temp,proto3" json:"temp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Core) Reset() {
	*x = Core{}
	mi := &file_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Core) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Core) ProtoMessage() {}

func (x *Core) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Core.ProtoReflect.Descriptor instead.
func (*Core) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

func (x *Core) GetUsage() float64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *Core) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

type CPUCoreInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cores         []*Core                `protobuf:"bytes,1,rep,name=cores,proto3" json:"cores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUCoreInfo) Reset() {
	*x = CPUCoreInfo{}
	mi := &file_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUCoreInfo) ProtoMessage() {}

func (x *CPUCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUCoreInfo.ProtoReflect.Descriptor instead.
func (*CPUCoreInfo) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{3}
}

func (x *CPUCoreInfo) GetCores() []*Core {
	if x != nil {
		return x.Cores
	}
	return nil
}

type MemSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsedPercent   float64                `protobuf:"fixed64,1,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	FreePercent   float64                `protobuf:"fixed64,2,opt,name=free_percent,json=freePercent,proto3" json:"free_percent,omitempty"`
	TotalMb       int32                  `protobuf:"varint,3,opt,name=total_mb,json=totalMb,proto3" json:"total_mb,omitempty"`
	UsedMb        int32                  `protobuf:"varint,4,opt,name=used_mb,json=usedMb,proto3" json:"used_mb,omitempty"`
	FreeMb        int32                  `protobuf:"varint,5,opt,name=free_mb,json=freeMb,proto3" json:"free_mb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemSummary) Reset() {
	*x = MemSummary{}
	mi := &file_info_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemSummary) ProtoMessage() {}

func (x *MemSummary) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemSummary.ProtoReflect.Descriptor instead.
func (*MemSummary) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{4}
}

func (x *MemSummary) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *MemSummary) GetFreePercent() float64 {
	if x != nil {
		return x.FreePercent
	}
	return 0
}

func (x *MemSummary) GetTotalMb() int32 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *MemSummary) GetUsedMb() int32 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *MemSummary) GetFreeMb() int32 {
	if x != nil {
		return x.FreeMb
	}
	return 0
}

type DiskStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint    string                 `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	Fstype        string                 `protobuf:"bytes,3,opt,name=fstype,proto3" json:"fstype,omitempty"`
	Total         uint64                 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Free          uint64                 `protobuf:"varint,5,opt,name=free,proto3" json:"free,omitempty"`
	Used          uint64                 `protobuf:"varint,6,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent   float64                `protobuf:"fixed64,7,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	Opts          []string               `protobuf:"bytes,8,rep,name=opts,proto3" json:"opts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskStruct) Reset() {
	*x = DiskStruct{}
	mi := &file_info_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStruct) ProtoMessage() {}

func (x *DiskStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStruct.ProtoReflect.Descriptor instead.
func (*DiskStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{5}
}

func (x *DiskStruct) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskStruct) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskStruct) GetFstype() string {
	if x != nil {
		return x.Fstype
	}
	return ""
}

func (x *DiskStruct) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskStruct) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *DiskStruct) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DiskStruct) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *DiskStruct) GetOpts() []string {
	if x != nil {
		return x.Opts
	}
	return nil
}

type DiskIOStruct struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Device           string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	ReadCount        uint64                 `protobuf:"varint,2,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
	WriteCount       uint64                 `protobuf:"varint,3,opt,name=write_count,json=writeCount,proto3" json:"write_count,omitempty"`
	ReadBytes        uint64                 `protobuf:"varint,4,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
	WriteBytes       uint64                 `protobuf:"varint,5,opt,name=write_bytes,json=writeBytes,proto3" json:"write_bytes,omitempty"`
	ReadTime         uint64                 `protobuf:"varint,6,opt,name=read_time,json=readTime,proto3" json:"read_time,omitempty"`
	WriteTime        uint64                 `protobuf:"varint,7,opt,name=write_time,json=writeTime,proto3" json:"write_time,omitempty"`
	IopsInProgress   uint64                 `protobuf:"varint,8,opt,name=iops_in_progress,json=iopsInProgress,proto3" json:"iops_in_progress,omitempty"`
	IoTime           uint64                 `protobuf:"varint,9,opt,name=io_time,json=ioTime,proto3" json:"io_time,omitempty"`
	WeightedIo       uint64                 `protobuf:"varint,10,opt,name=weighted_io,json=weightedIo,proto3" json:"weighted_io,omitempty"`
	MergedReadCount  uint64                 `protobuf:"varint,11,opt,name=merged_read_count,json=mergedReadCount,proto3" json:"merged_read_count,omitempty"`
	MergedWriteCount uint64                 `protobuf:"varint,12,opt,name=merged_write_count,json=mergedWriteCount,proto3" json:"merged_write_count,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DiskIOStruct) Reset() {
	*x = DiskIOStruct{}
	mi := &file_info_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskIOStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskIOStruct) ProtoMessage() {}

func (x *DiskIOStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskIOStruct.ProtoReflect.Descriptor instead.
func (*DiskIOStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{6}
}

func (x *DiskIOStruct) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskIOStruct) GetReadCount() uint64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *DiskIOStruct) GetWriteCount() uint64 {
	if x != nil {
		return x.WriteCount
	}
	return 0
}

func (x *DiskIOStruct) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *DiskIOStruct) GetWriteBytes() uint64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *DiskIOStruct) GetReadTime() uint64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *DiskIOStruct) GetWriteTime() uint64 {
	if x != nil {
		return x.WriteTime
	}
	return 0
}

func (x *DiskIOStruct) GetIopsInProgress() uint64 {
	if x != nil {
		return x.IopsInProgress
	}
	return 0
}

func (x *DiskIOStruct) GetIoTime() uint64 {
	if x != nil {
		return x.IoTime
	}
	return 0
}

func (x *DiskIOStruct) GetWeightedIo() uint64 {
	if x != nil {
		return x.WeightedIo
	}
	return 0
}

func (x *DiskIOStruct) GetMergedReadCount() uint64 {
	if x != nil {
		return x.MergedReadCount
	}
	return 0
}

func (x *DiskIOStruct) GetMergedWriteCount() uint64 {
	if x != nil {
		return x.MergedWriteCount
	}
	return 0
}

type DiskSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disks         []*DiskStruct          `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	Usage         map[string]float64     `protobuf:"bytes,2,rep,name=usage,proto3" json:"usage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Io            []*DiskIOStruct        `protobuf:"bytes,3,rep,name=io,proto3" json:"io,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskSummary) Reset() {
	*x = DiskSummary{}
	mi := &file_info_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSummary) ProtoMessage() {}

func (x *DiskSummary) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSummary.ProtoReflect.Descriptor instead.
func (*DiskSummary) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{7}
}

func (x *DiskSummary) GetDisks() []*DiskStruct {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *DiskSummary) GetUsage() map[string]float64 {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *DiskSummary) GetIo() []*DiskIOStruct {
	if x != nil {
		return x.Io
	}
	return nil
}

type NetworkInterfaceStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mtu           int32                  `protobuf:"varint,2,opt,name=mtu,proto3" json:"mtu,omitempty"`
	HardwareAddr  string                 `protobuf:"bytes,3,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	Flags         []string               `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty"`
	Addrs         []string               `protobuf:"bytes,5,rep,name=addrs,proto3" json:"addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfaceStruct) Reset() {
	*x = NetworkInterfaceStruct{}
	mi := &file_info_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfaceStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceStruct) ProtoMessage() {}

func (x *NetworkInterfaceStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceStruct.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkInterfaceStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceStruct) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *NetworkInterfaceStruct) GetHardwareAddr() string {
	if x != nil {
		return x.HardwareAddr
	}
	return ""
}

func (x *NetworkInterfaceStruct) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *NetworkInterfaceStruct) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type NetworkStatsStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BytesSent     uint64                 `protobuf:"varint,2,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesRecv     uint64                 `protobuf:"varint,3,opt,name=bytes_recv,json=bytesRecv,proto3" json:"bytes_recv,omitempty"`
	PacketsSent   uint64                 `protobuf:"varint,4,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsRecv   uint64                 `protobuf:"varint,5,opt,name=packets_recv,json=packetsRecv,proto3" json:"packets_recv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkStatsStruct) Reset() {
	*x = NetworkStatsStruct{}
	mi := &file_info_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStatsStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStatsStruct) ProtoMessage() {}

func (x *NetworkStatsStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStatsStruct.ProtoReflect.Descriptor instead.
func (*NetworkStatsStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkStatsStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkStatsStruct) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkStatsStruct) GetBytesRecv() uint64 {
	if x != nil {
		return x.BytesRecv
	}
	return 0
}

func (x *NetworkStatsStruct) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkStatsStruct) GetPacketsRecv() uint64 {
	if x != nil {
		return x.PacketsRecv
	}
	return 0
}

type NetworkConnectionStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fd            uint32                 `protobuf:"varint,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Family        uint32                 `protobuf:"varint,2,opt,name=family,proto3" json:"family,omitempty"`
	Type          uint32                 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Laddr         string                 `protobuf:"bytes,4,opt,name=laddr,proto3" json:"laddr,omitempty"`
	Raddr         string                 `protobuf:"bytes,5,opt,name=raddr,proto3" json:"raddr,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Pid           int32                  `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConnectionStruct) Reset() {
	*x = NetworkConnectionStruct{}
	mi := &file_info_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectionStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectionStruct) ProtoMessage() {}

func (x *NetworkConnectionStruct) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectionStruct.ProtoReflect.Descriptor instead.
func (*NetworkConnectionStruct) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkConnectionStruct) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *NetworkConnectionStruct) GetFamily() uint32 {
	if x != nil {
		return x.Family
	}
	return 0
}

func (x *NetworkConnectionStruct) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NetworkConnectionStruct) GetLaddr() string {
	if x != nil {
		return x.Laddr
	}
	return ""
}

func (x *NetworkConnectionStruct) GetRaddr() string {
	if x != nil {
		return x.Raddr
	}
	return ""
}

func (x *NetworkConnectionStruct) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkConnectionStruct) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type NetworkSummary struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Interfaces    []*NetworkInterfaceStruct `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Stats         []*NetworkStatsStruct     `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
	Usage         map[string]uint64         `protobuf:"bytes,3,rep,name=usage,proto3" json:"usage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkSummary) Reset() {
	*x = NetworkSummary{}
	mi := &file_info_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSummary) ProtoMessage() {}

func (x *NetworkSummary) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSummary.ProtoReflect.Descriptor instead.
func (*NetworkSummary) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkSummary) GetInterfaces() []*NetworkInterfaceStruct {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *NetworkSummary) GetStats() []*NetworkStatsStruct {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *NetworkSummary) GetUsage() map[string]uint64 {
	if x != nil {
		return x.Usage
	}
	return nil
}

type StressCPUParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumVCPU       int32                  `protobuf:"varint,1,opt,name=numVCPU,proto3" json:"numVCPU,omitempty"`
	NumSeconds    int32                  `protobuf:"varint,2,opt,name=numSeconds,proto3" json:"numSeconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StressCPUParams) Reset() {
	*x = StressCPUParams{}
	mi := &file_info_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StressCPUParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StressCPUParams) ProtoMessage() {}

func (x *StressCPUParams) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StressCPUParams.ProtoReflect.Descriptor instead.
func (*StressCPUParams) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{12}
}

func (x *StressCPUParams) GetNumVCPU() int32 {
	if x != nil {
		return x.NumVCPU
	}
	return 0
}

func (x *StressCPUParams) GetNumSeconds() int32 {
	if x != nil {
		return x.NumSeconds
	}
	return 0
}

type TestRamMEMParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumGigs       int32                  `protobuf:"varint,1,opt,name=numGigs,proto3" json:"numGigs,omitempty"`
	NumOfPasses   int32                  `protobuf:"varint,2,opt,name=numOfPasses,proto3" json:"numOfPasses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRamMEMParams) Reset() {
	*x = TestRamMEMParams{}
	mi := &file_info_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRamMEMParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRamMEMParams) ProtoMessage() {}

func (x *TestRamMEMParams) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRamMEMParams.ProtoReflect.Descriptor instead.
func (*TestRamMEMParams) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{13}
}

func (x *TestRamMEMParams) GetNumGigs() int32 {
	if x != nil {
		return x.NumGigs
	}
	return 0
}

func (x *TestRamMEMParams) GetNumOfPasses() int32 {
	if x != nil {
		return x.NumOfPasses
	}
	return 0
}

var File_info_proto protoreflect.FileDescriptor

const file_info_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"info.proto\x12\x04info\"\a\n" +
	"\x05Empty\"\x18\n" +
	"\x02Ok\x12\x12\n" +
	"\x04resp\x18\x01 \x01(\tR\x04resp\"0\n" +
	"\x04Core\x12\x14\n" +
	"\x05usage\x18\x01 \x01(\x01R\x05usage\x12\x12\n" +
	"\x04temp\x18\x02 \x01(\x01R\x04temp\"/\n" +
	"\vCPUCoreInfo\x12 \n" +
	"\x05cores\x18\x01 \x03(\v2\n" +
	".info.CoreR\x05cores\"\x9f\x01\n" +
	"\n" +
	"MemSummary\x12!\n" +
	"\fused_percent\x18\x01 \x01(\x01R\vusedPercent\x12!\n" +
	"\ffree_percent\x18\x02 \x01(\x01R\vfreePercent\x12\x19\n" +
	"\btotal_mb\x18\x03 \x01(\x05R\atotalMb\x12\x17\n" +
	"\aused_mb\x18\x04 \x01(\x05R\x06usedMb\x12\x17\n" +
	"\afree_mb\x18\x05 \x01(\x05R\x06freeMb\"\xd2\x01\n" +
	"\n" +
	"DiskStruct\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1f\n" +
	"\vmount_point\x18\x02 \x01(\tR\n" +
	"mountPoint\x12\x16\n" +
	"\x06fstype\x18\x03 \x01(\tR\x06fstype\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x04R\x05total\x12\x12\n" +
	"\x04free\x18\x05 \x01(\x04R\x04free\x12\x12\n" +
	"\x04used\x18\x06 \x01(\x04R\x04used\x12!\n" +
	"\fused_percent\x18\a \x01(\x01R\vusedPercent\x12\x12\n" +
	"\x04opts\x18\b \x03(\tR\x04opts\"\xa0\x03\n" +
	"\fDiskIOStruct\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1d\n" +
	"\n" +
	"read_count\x18\x02 \x01(\x04R\treadCount\x12\x1f\n" +
	"\vwrite_count\x18\x03 \x01(\x04R\n" +
	"writeCount\x12\x1d\n" +
	"\n" +
	"read_bytes\x18\x04 \x01(\x04R\treadBytes\x12\x1f\n" +
	"\vwrite_bytes\x18\x05 \x01(\x04R\n" +
	"writeBytes\x12\x1b\n" +
	"\tread_time\x18\x06 \x01(\x04R\breadTime\x12\x1d\n" +
	"\n" +
	"write_time\x18\a \x01(\x04R\twriteTime\x12(\n" +
	"\x10iops_in_progress\x18\b \x01(\x04R\x0eiopsInProgress\x12\x17\n" +
	"\aio_time\x18\t \x01(\x04R\x06ioTime\x12\x1f\n" +
	"\vweighted_io\x18\n" +
	" \x01(\x04R\n" +
	"weightedIo\x12*\n" +
	"\x11merged_read_count\x18\v \x01(\x04R\x0fmergedReadCount\x12,\n" +
	"\x12merged_write_count\x18\f \x01(\x04R\x10mergedWriteCount\"\xc7\x01\n" +
	"\vDiskSummary\x12&\n" +
	"\x05disks\x18\x01 \x03(\v2\x10.info.DiskStructR\x05disks\x122\n" +
	"\x05usage\x18\x02 \x03(\v2\x1c.info.DiskSummary.UsageEntryR\x05usage\x12\"\n" +
	"\x02io\x18\x03 \x03(\v2\x12.info.DiskIOStructR\x02io\x1a8\n" +
	"\n" +
	"UsageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x8f\x01\n" +
	"\x16NetworkInterfaceStruct\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03mtu\x18\x02 \x01(\x05R\x03mtu\x12#\n" +
	"\rhardware_addr\x18\x03 \x01(\tR\fhardwareAddr\x12\x14\n" +
	"\x05flags\x18\x04 \x03(\tR\x05flags\x12\x14\n" +
	"\x05addrs\x18\x05 \x03(\tR\x05addrs\"\xac\x01\n" +
	"\x12NetworkStatsStruct\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x02 \x01(\x04R\tbytesSent\x12\x1d\n" +
	"\n" +
	"bytes_recv\x18\x03 \x01(\x04R\tbytesRecv\x12!\n" +
	"\fpackets_sent\x18\x04 \x01(\x04R\vpacketsSent\x12!\n" +
	"\fpackets_recv\x18\x05 \x01(\x04R\vpacketsRecv\"\xab\x01\n" +
	"\x17NetworkConnectionStruct\x12\x0e\n" +
	"\x02fd\x18\x01 \x01(\rR\x02fd\x12\x16\n" +
	"\x06family\x18\x02 \x01(\rR\x06family\x12\x12\n" +
	"\x04type\x18\x03 \x01(\rR\x04type\x12\x14\n" +
	"\x05laddr\x18\x04 \x01(\tR\x05laddr\x12\x14\n" +
	"\x05raddr\x18\x05 \x01(\tR\x05raddr\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x10\n" +
	"\x03pid\x18\a \x01(\x05R\x03pid\"\xef\x01\n" +
	"\x0eNetworkSummary\x12<\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2\x1c.info.NetworkInterfaceStructR\n" +
	"interfaces\x12.\n" +
	"\x05stats\x18\x02 \x03(\v2\x18.info.NetworkStatsStructR\x05stats\x125\n" +
	"\x05usage\x18\x03 \x03(\v2\x1f.info.NetworkSummary.UsageEntryR\x05usage\x1a8\n" +
	"\n" +
	"UsageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"K\n" +
	"\x0fStressCPUParams\x12\x18\n" +
	"\anumVCPU\x18\x01 \x01(\x05R\anumVCPU\x12\x1e\n" +
	"\n" +
	"numSeconds\x18\x02 \x01(\x05R\n" +
	"numSeconds\"N\n" +
	"\x10TestRamMEMParams\x12\x18\n" +
	"\anumGigs\x18\x01 \x01(\x05R\anumGigs\x12 \n" +
	"\vnumOfPasses\x18\x02 \x01(\x05R\vnumOfPasses2\xaf\x02\n" +
	"\x04Info\x12,\n" +
	"\n" +
	"GetCPUInfo\x12\v.info.Empty\x1a\x11.info.CPUCoreInfo\x12.\n" +
	"\rGetMemSummary\x12\v.info.Empty\x1a\x10.info.MemSummary\x120\n" +
	"\x0eGetDiskSummary\x12\v.info.Empty\x1a\x11.info.DiskSummary\x126\n" +
	"\x11GetNetworkSummary\x12\v.info.Empty\x1a\x14.info.NetworkSummary\x12/\n" +
	"\tStressCPU\x12\x15.info.StressCPUParams\x1a\v.info.Empty\x12.\n" +
	"\n" +
	"TestRamMEM\x12\x16.info.TestRamMEMParams\x1a\b.info.OkB2Z0github.com/Maruqes/512SvMan/api/proto/info;protob\x06proto3"

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData []byte
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_info_proto_rawDesc), len(file_info_proto_rawDesc)))
	})
	return file_info_proto_rawDescData
}

var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_info_proto_goTypes = []any{
	(*Empty)(nil),                   // 0: info.Empty
	(*Ok)(nil),                      // 1: info.Ok
	(*Core)(nil),                    // 2: info.Core
	(*CPUCoreInfo)(nil),             // 3: info.CPUCoreInfo
	(*MemSummary)(nil),              // 4: info.MemSummary
	(*DiskStruct)(nil),              // 5: info.DiskStruct
	(*DiskIOStruct)(nil),            // 6: info.DiskIOStruct
	(*DiskSummary)(nil),             // 7: info.DiskSummary
	(*NetworkInterfaceStruct)(nil),  // 8: info.NetworkInterfaceStruct
	(*NetworkStatsStruct)(nil),      // 9: info.NetworkStatsStruct
	(*NetworkConnectionStruct)(nil), // 10: info.NetworkConnectionStruct
	(*NetworkSummary)(nil),          // 11: info.NetworkSummary
	(*StressCPUParams)(nil),         // 12: info.StressCPUParams
	(*TestRamMEMParams)(nil),        // 13: info.TestRamMEMParams
	nil,                             // 14: info.DiskSummary.UsageEntry
	nil,                             // 15: info.NetworkSummary.UsageEntry
}
var file_info_proto_depIdxs = []int32{
	2,  // 0: info.CPUCoreInfo.cores:type_name -> info.Core
	5,  // 1: info.DiskSummary.disks:type_name -> info.DiskStruct
	14, // 2: info.DiskSummary.usage:type_name -> info.DiskSummary.UsageEntry
	6,  // 3: info.DiskSummary.io:type_name -> info.DiskIOStruct
	8,  // 4: info.NetworkSummary.interfaces:type_name -> info.NetworkInterfaceStruct
	9,  // 5: info.NetworkSummary.stats:type_name -> info.NetworkStatsStruct
	15, // 6: info.NetworkSummary.usage:type_name -> info.NetworkSummary.UsageEntry
	0,  // 7: info.Info.GetCPUInfo:input_type -> info.Empty
	0,  // 8: info.Info.GetMemSummary:input_type -> info.Empty
	0,  // 9: info.Info.GetDiskSummary:input_type -> info.Empty
	0,  // 10: info.Info.GetNetworkSummary:input_type -> info.Empty
	12, // 11: info.Info.StressCPU:input_type -> info.StressCPUParams
	13, // 12: info.Info.TestRamMEM:input_type -> info.TestRamMEMParams
	3,  // 13: info.Info.GetCPUInfo:output_type -> info.CPUCoreInfo
	4,  // 14: info.Info.GetMemSummary:output_type -> info.MemSummary
	7,  // 15: info.Info.GetDiskSummary:output_type -> info.DiskSummary
	11, // 16: info.Info.GetNetworkSummary:output_type -> info.NetworkSummary
	0,  // 17: info.Info.StressCPU:output_type -> info.Empty
	1,  // 18: info.Info.TestRamMEM:output_type -> info.Ok
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_info_proto_rawDesc), len(file_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}
